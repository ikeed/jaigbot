name: Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  REGION: ${{ vars.GCP_REGION }}
  GAR_REPO: ${{ vars.GAR_REPO }}
  SERVICE_NAME: ${{ vars.SERVICE_NAME }}
  MODEL_ID: ${{ vars.MODEL_ID }}
  TEMPERATURE: ${{ vars.TEMPERATURE }}
  MAX_TOKENS: ${{ vars.MAX_TOKENS }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      WORKLOAD_IDP: ${{ secrets.WORKLOAD_IDP }}
      WORKLOAD_SA: ${{ secrets.WORKLOAD_SA }}
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate auth configuration
        env:
          WORKLOAD_IDP: ${{ secrets.WORKLOAD_IDP }}
          WORKLOAD_SA: ${{ secrets.WORKLOAD_SA }}
          CREDENTIALS_JSON: ${{ secrets.GCP_SA_KEY }}
        run: |
          if [[ -n "$CREDENTIALS_JSON" ]]; then
            echo "Using credentials_json authentication via GCP_SA_KEY"
            exit 0
          fi
          if [[ -n "$WORKLOAD_IDP" && -n "$WORKLOAD_SA" ]]; then
            echo "Using Workload Identity Federation authentication"
            exit 0
          fi
          echo "Error: Missing auth configuration. Set WORKLOAD_IDP and WORKLOAD_SA secrets for WIF, or GCP_SA_KEY for JSON key auth." >&2
          exit 1

      - name: Authenticate to Google Cloud (WIF)
        if: env.WORKLOAD_IDP != '' && env.WORKLOAD_SA != ''
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDP }}
          service_account: ${{ secrets.WORKLOAD_SA }}

      - name: Authenticate to Google Cloud (Service Account JSON)
        if: env.GCP_SA_KEY != ''
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker $REGION-docker.pkg.dev -q

      - name: Build and push container image
        run: |
          IMAGE="$REGION-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$SERVICE_NAME:${GITHUB_SHA}"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

      - name: Deploy to Cloud Run
        run: |
          IMAGE="$REGION-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$SERVICE_NAME:${GITHUB_SHA}"
          gcloud run deploy "$SERVICE_NAME" \
            --image "$IMAGE" \
            --region "$REGION" \
            --allow-unauthenticated \
            --service-account "cr-vertex-runtime@${PROJECT_ID}.iam.gserviceaccount.com" \
            --set-env-vars "PROJECT_ID=${PROJECT_ID},REGION=${REGION},MODEL_ID=${MODEL_ID:-gemini-1.5-flash-002},TEMPERATURE=${TEMPERATURE:-0.2},MAX_TOKENS=${MAX_TOKENS:-256}" \
            --memory=512Mi --cpu=0.5 --concurrency=20 --max-instances=2 --timeout=60

      - name: Show service URL and health check
        run: |
          URL=$(gcloud run services describe "$SERVICE_NAME" --region "$REGION" --format 'value(status.url)')
          echo "Service URL: $URL"
          curl -fsS "$URL/healthz" || true
